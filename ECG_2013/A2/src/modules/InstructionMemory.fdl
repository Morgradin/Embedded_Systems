ipblock instMem(in address : ns(5);
                in wr      : ns(1);
                in rd      : ns(1);  
                in idata   : ns(32);
                out odata  : ns(32)) {

   iptype "ram";
   ipparm "wl=32"; 
   ipparm "size=64";
   ipparm "file=program.txt";  
 }
 


dp PC(out pc_out : ns(5); in jump : ns(1)) {

  reg count : ns(5); // Lokalt register
  sig tmp : ns(5);
  sig current : ns(5);

  always {
    $display("");
    $display("");
    $display($dec, "[", $cycle, "]PC -> pc_out: ", pc_out, ", current: ", current, ", count: ", count);

    tmp = (jump) ? 0 : count + 1;
    current = count;
    pc_out = count = tmp;
  }
}





dp instructionMemory(in address : ns(5);
                     out ctrl   : ns(13);
                     out instVal: ns(19);
                     out jump : ns(1)) { 

    reg adr : ns(5);
    reg iv : ns(19); // Delalying signal to match the rest. Why?

    sig instData: ns(32);
    sig adrc : ns(5);
    
    use instMem(address, 0, 1, 0, instData);

    always{
        $display($hex, "[", $cycle, "]instructionMemory - instData: ", instData, ", jump: ", jump);//ctrl_out: ", ctrl, ", instVal: ", instVal);
        ctrl = instData[31:19];
        iv = instData[18:0];
        instVal = iv;

        adr = address;
        adrc = adr;

        jump = ctrl[12];
    }
}



system PCsystem{
    PC(address, jump);
    instructionMemory(address, ctrl, instVal, jump);
}


