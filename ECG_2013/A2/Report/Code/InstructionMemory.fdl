ipblock M( in address : ns(5);
           in wr      : ns(1);
           in rd      : ns(1);  
           in idata   : ns(32);
           out odata  : ns(32)) {

   iptype "ram";
   ipparm "wl=32"; 
   ipparm "size=64";
   ipparm "file=ram.txt";  
 }
 


 dp tmac(out address  : ns(5);
         out wr 	  : ns(1);
         out rd   	  : ns(1);
         out idata    : ns(32); 
         in  odata    : ns(32)) {

    reg ar  : ns(5);
    reg idr : ns(32);
    reg odr : ns(32);
 
    sfg write  { 
    	wr = 1; 
    	rd = 0; 
    	idata = idr; 
    	odr = odata; 
    	address = ar;  

    	$display($cycle, ":ar ", ar, ", idata ", idata);    
    }

    sfg read   { 
    	wr = 0; 
    	rd = 1; 
    	idata = idr; 
    	odr = odata; 
    	address = ar;

    	$display($cycle, ":ar ", ar, ", odata ", odata);
    }

    sfg incadr  { 
    	ar = ar + 1; 
    	idr = idr + 1;
    }

    sfg clraddr { 
    	ar = 0; 
    }
 }
 


 fsm ftmac(tmac) {
   state   s1;
   initial s0;
   @s0 if (ar == 8) then (read,  clraddr)  -> s0;
       else   (read,  incadr)   -> s0; 
 }
 


 dp sysRAM {
   sig adr   : ns(5);
   sig w     : ns(1);
   sig r     : ns(1);
   sig idata : ns(32);
   sig odata : ns(32);

   use M   (adr, w, r, idata, odata);
   use tmac(adr, w, r, idata, odata);
 }
 


 system S {
   sysRAM;
 }
