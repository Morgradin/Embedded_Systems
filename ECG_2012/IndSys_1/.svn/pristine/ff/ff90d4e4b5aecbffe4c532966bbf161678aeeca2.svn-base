/*
 * RPeakTest.c
 *
 *  Created on: 03/10/2012
 *      Author: Bastian
 */

#include <stdio.h>
#include <stdlib.h>
#include "sensor.h"
#include "RPeakDetection.h"

int spkf = 0;
int npkf = 0;
int threshold1 = 0;
int threshold2 = 0;
int RR_low = 0;
int RR_high = 0;
int RR_miss = 0;
int counter1 = 0;
int counter2 = 0;
int RRArray1[8] = { 0 };
int RRArray2[8] = { 0 };
int RRAverage1 = 0;
int RRaverage2 = 0;
int peaks[100][2] = { 0, 0 };
int lastPeak = 0;
int lastRPeak = 0;
int RRMissCounter = 0;
int totalPeaks[50][2] = { 0, 0 };
int totalPeakPos = 0;
int totalRR = 0;
int *spkf = &spkf;
int *npkf = &npkf;
int *threshold1 = &threshold1;
int *threshold2 = &threshold2;
int *RR_low = &RR_low;
int *RR_high = &RR_high;
int *RR_miss = &RR_miss;
int *counter1 = &counter1;
int *counter2 = &counter2;
int (*RRArray1)[8] = &RRArray1[8];
int (*RRArray2)[8] = &RRArray2[8];
int *RRAverage1 = &RRAverage1;
int *RRAverage2 = &RRAverage2;
int (*peaks)[100][2] = &peaks[100][2];
int *lastPeak = &lastPeak;
int *lastRPeak = &lastRPeak;
int *RRMissCounter = &RRMissCounter;
int (*totalPeaks)[50][2] = &totalPeaks[50][2];
int *totalPeakPos = &totalPeakPos;
int *totalRR = &totalRR;

void findPeakTest(int (*peaks), int (*totalPeaks), int *totalPeakPos) {

	static const char filename[] = "x_mwi.txt";
	FILE *file = NULL;
	file = fopen(filename, "r");
	int data[3000] = { 0 };
	int peakPos = 0;
	int i = 0;
	for (i = 0; i < 3000; i++) {
		data[i] = getNextData(file);
	}
	i = 0;
	for (i = 0; i < 3000; i++) {
		if (data[i] > data[(i - 1)] && data[i] > data[(i + 1)]) {
			peaks[peakPos][0] = data[i];
			totalPeaks[*totalPeakPos][0] = data[i];
			peaks[peakPos][1] = i;
			totalPeaks[*totalPeakPos][1] = i;
			peakPos++;
			*totalPeakPos++;
		}
	}
}

int main (void){
	int input=1;
	findPeakTest( *peaks, *totalPeaks, *totalPeakPos);
	calculateRR( *spkf, *npkf, *threshold1, *threshold2, *RR_low, *RR_high, *RR_miss,
			*counter1, *counter2, *RRArray1, *RRArray2, *RRAverage1, *RRaverage2, *peaks,
			*lastPeak, *lastRPeak, *RRMissCounter, *totalPeaks, *totalRR);
	printf("Latest R-peak: %d. Latest R-peak at: %d seconds.\nHeartbeats per minute: %d. Warnings:/n", lastRpeak, totalRR/250, totalPeaks);
	if (lastRPeak <= 2000) printf("Weak heartbeat./n");
	if (RRMissCounter >= 5) printf("Irregular heartbeat./n");
	if (RRMissCounter < 5 && lastRPeak > 2000) printf("No warnings.");
	printf("/n/nPress 0 to exit.");
	scanf("%d", &input);

	return input;
}
