/*
 * filter.c
 *
 *  Created on: 12/09/2012
 *      Author: Bastian
 */
#include <stdlib.h>
#include <stdio.h>
#include "sensor.h"

int lowPass(int x[], int y[], int pos) {
	if (pos <= 0) {
		y[pos] = (x[pos] / 32);
	}
	else if (pos == 1) {
		y[pos] = 2 * y[pos-1] + ((x[pos] / 32));
	}
	else if (pos > 1 && pos < 6) {
		y[pos] = 2 * y[pos - 1] - y[pos - 2] + ((x[pos] / 32));
	}
	else if (pos > 5 && pos < 12) {
		y[pos] = 2 * y[pos - 1] - y[pos - 2]
				+ ((x[pos] - 2 * x[pos - 6])/32);
	}
	else {

		y[pos] = ((2 * y[pos - 1] - y[pos - 2])
				+ (x[pos] - 2 * x[pos - 6] + x[pos - 12])/32);
	}
	return y[pos];
}

int highPass(int x[], int y[], int pos) {
	if (pos <= 0) {
		y[pos] = ((x[pos]) / 32);
	}
	else if (pos >= 1 && pos < 16) {
		y[pos] = (y[pos - 1] - ((x[pos]) / 32));
	}
	else if (pos == 16) {
		y[pos] = (y[pos - 1] - (x[pos]) / 32 + x[pos - 16]);
	}
	else if (pos >= 17 && pos < 32) {
		y[pos] = (y[pos - 1] - (x[pos]) / 32 + x[pos - 16] - x[pos - 17]);
	}
	else {
		y[pos] = (y[pos - 1] - (x[pos]) / 32 + x[pos - 16] - x[pos - 17]
				+ x[pos - 32]) / 32;
	}
	return y[pos];
}

int movingWindowIntegration(int x[], int y[], int pos){
	int i=0;
	for (i=30;i>=0;i--){
		y[pos]+=(x[pos-i]);
	}
	y[pos]=y[pos]/30;

	return y[pos];
}

int derivative(int x[], int y[], int pos) {
	if (pos==0) {
		y[pos]=(2*x[pos])/8;
	}
	else if (pos==1 || pos == 2) {
		y[pos]=(2*x[pos]+x[pos-1])/8;
	}
	else if (pos == 3) {
		y[pos]=(2*x[pos]+x[pos-1]-x[pos-3])/8;
	}
	else {
		y[pos]=(2*(x[pos])+x[pos-1]-x[pos-3]-(2*x[pos-4]))/8;
	}
	return y[pos];
}

int squaring(int value) {
	return ((value) * (value));
}
