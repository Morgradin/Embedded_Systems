#include <stdio.h>
#include <stdlib.h>
#include "sensor.h"

void testLow(){
	static const char filename[] = "x_low.txt";
	FILE *file = NULL;
	file = fopen ( filename, "r" );
	int Data[50]={0}, FilteredData[50]={0}, i=0;

	for (i=0;i<50;i++){
			Data[i] = getNextData(file);
			FilteredData[i] = highPass(Data, FilteredData, i);
	}

	for (i=0;i<50;i++){
		printf("Before filter: %d. After Filter: %d\n", Data[i], FilteredData[i]);
	}

	//Closes the file, as we no longer need to read from it, then prints the highest value and stops the program.
	fclose(file);
}

void testHigh(){
	static const char filename[] = "x_high.txt";
	FILE *file = NULL;
	file = fopen ( filename, "r" );
	int Data[50]={0}, FilteredData[50]={0}, i=0;

	for (i=0;i<50;i++){
			Data[i] = getNextData(file);
			FilteredData[i] = highPass(Data, FilteredData, i);
	}

	for (i=0;i<50;i++){
		printf("Before filter: %d. After Filter: %d\n", Data[i], FilteredData[i]);
	}

	//Closes the file, as we no longer need to read from it, then prints the highest value and stops the program.
	fclose(file);
}

void testDerivative(){
	static const char filename[] = "x_der.txt";
	FILE *file = NULL;
	file = fopen ( filename, "r" );
	int Data[50]={0}, FilteredData[50]={0}, i=0;

	for (i=0;i<50;i++){
			Data[i] = getNextData(file);
			FilteredData[i] = derivative(Data, FilteredData, i);
	}

	for (i=0;i<50;i++){
		printf("Before filter: %d. After Filter: %d\n", Data[i], FilteredData[i]);
	}

	//Closes the file, as we no longer need to read from it, then prints the highest value and stops the program.
	fclose(file);
}

void testSquaring(){
	static const char filename[] = "x_sqr.txt";
	FILE *file = NULL;
	file = fopen ( filename, "r" );
	int Data[50]={0}, FilteredData[50]={0}, i=0;

	for (i=0;i<50;i++){
			Data[i] = getNextData(file);
			FilteredData[i] = squaring(Data[i]);
	}

	for (i=0;i<50;i++){
		printf("Before filter: %d. After Filter: %d\n", Data[i], FilteredData[i]);
	}

	//Closes the file, as we no longer need to read from it, then prints the highest value and stops the program.
	fclose(file);
}

void testMWI(){
	static const char filename[] = "x_mwi.txt";
	FILE *file = NULL;
	file = fopen ( filename, "r" );
	int Data[50]={0}, FilteredData[50]={0}, i=0;

	for (i=35;i<50;i++){
			Data[i] = getNextData(file);
			FilteredData[i] = movingWindowIntegration(Data, FilteredData, i);
	}

	for (i=35;i<50;i++){
		printf("Before filter: %d. After Filter: %d\n", Data[i], FilteredData[i]);
	}

	//Closes the file, as we no longer need to read from it, then prints the highest value and stops the program.
	fclose(file);
}
